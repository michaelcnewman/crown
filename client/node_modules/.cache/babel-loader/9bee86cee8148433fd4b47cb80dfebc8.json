{"ast":null,"code":"import { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { ShopActionTypes } from './shop.types';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsObj => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsObj\n});\nexport const fetchCollectionsFailure = errorMessage = {\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n};\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionObj = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionObj));\n    }).catch(errorMessage => {\n      dispatch(fetchCollectionsFailure(errorMessage));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/newman/Development/Udemy/ReactMastery/crown/src/redux/shop/shop.actions.js"],"names":["firestore","convertCollectionsSnapshotToMap","ShopActionTypes","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsObj","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","collectionObj","catch"],"mappings":"AAAA,SACEA,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAIA,SAASC,eAAT,QAAgC,cAAhC;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEF,eAAe,CAACG;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,cAAD,KAAqB;AAC1DH,EAAAA,IAAI,EAAEF,eAAe,CAACM,yBADoC;AAE1DC,EAAAA,OAAO,EAAEF;AAFiD,CAArB,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,YAAY,GAAG;AACrDP,EAAAA,IAAI,EAAEF,eAAe,CAACU,yBAD+B;AAErDH,EAAAA,OAAO,EAAEE;AAF4C,CAAhD;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC9C,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMC,aAAa,GAAGnB,+BAA+B,CAACkB,QAAD,CAArD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACc,aAAD,CAAxB,CAAR;AACD,KALH,EAMGC,KANH,CAMUV,YAAD,IAAkB;AACvBG,MAAAA,QAAQ,CAACJ,uBAAuB,CAACC,YAAD,CAAxB,CAAR;AACD,KARH;AASD,GAbD;AAcD,CAfM","sourcesContent":["import {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils';\nimport { ShopActionTypes } from './shop.types';\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsSuccess = (collectionsObj) => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsObj,\n});\n\nexport const fetchCollectionsFailure = (errorMessage = {\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage,\n});\n\nexport const fetchCollectionsStartAsync = () => {\n  return (dispatch) => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n\n    collectionRef\n      .get()\n      .then((snapshot) => {\n        const collectionObj = convertCollectionsSnapshotToMap(snapshot);\n        dispatch(fetchCollectionsSuccess(collectionObj));\n      })\n      .catch((errorMessage) => {\n        dispatch(fetchCollectionsFailure(errorMessage));\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}