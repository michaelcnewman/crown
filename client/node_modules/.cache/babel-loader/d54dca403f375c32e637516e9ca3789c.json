{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { ShopActionTypes } from './shop.types';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport function* fetchCollectionStartAsync() {\n  yield console.log('I am fired.');\n  yield collectionRef = firestore.collection('collections');\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionStartAsync);\n}\ncollectionRef.get().then(snapshot => {\n  const collectionObj = convertCollectionsSnapshotToMap(snapshot);\n  dispatch(fetchCollectionsSuccess(collectionObj));\n}).catch(errorMessage => {\n  dispatch(fetchCollectionsFailure(errorMessage));\n});","map":{"version":3,"sources":["/Users/newman/Development/Udemy/ReactMastery/crown/src/redux/shop/shop.sagas.js"],"names":["takeEvery","ShopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","firestore","convertCollectionsSnapshotToMap","fetchCollectionStartAsync","console","log","collectionRef","collection","fetchCollectionStart","FETCH_COLLECTIONS_START","get","then","snapshot","collectionObj","dispatch","catch","errorMessage"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAIA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAO,UAAUC,yBAAV,GAAsC;AAC3C,QAAMC,OAAO,CAACC,GAAR,CAAY,aAAZ,CAAN;AACA,QAAOC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAvB;AACD;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACtC,QAAMX,SAAS,CACbC,eAAe,CAACW,uBADH,EAEbN,yBAFa,CAAf;AAID;AAEDG,aAAa,CACVI,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,QAAMC,aAAa,GAAGX,+BAA+B,CAACU,QAAD,CAArD;AACAE,EAAAA,QAAQ,CAACf,uBAAuB,CAACc,aAAD,CAAxB,CAAR;AACD,CALH,EAMGE,KANH,CAMUC,YAAD,IAAkB;AACvBF,EAAAA,QAAQ,CAACd,uBAAuB,CAACgB,YAAD,CAAxB,CAAR;AACD,CARH","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\nimport { ShopActionTypes } from './shop.types';\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure,\n} from './shop.actions';\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils';\n\nexport function* fetchCollectionStartAsync() {\n  yield console.log('I am fired.');\n  yield (collectionRef = firestore.collection('collections'));\n}\n\nexport function* fetchCollectionStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionStartAsync,\n  );\n}\n\ncollectionRef\n  .get()\n  .then((snapshot) => {\n    const collectionObj = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionObj));\n  })\n  .catch((errorMessage) => {\n    dispatch(fetchCollectionsFailure(errorMessage));\n  });\n"]},"metadata":{},"sourceType":"module"}