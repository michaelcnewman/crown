{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error.message));\n  }\n}\nexport function* signUp({\n  payload: {\n    displayName,\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield console.log(user); //yield put(signUpSuccess({user, { displayName }}));\n  } catch (error) {\n    yield put(signUpFailure(error.message));\n  }\n}\nexport function signInOnSignUpSuccess(user, additionalData) {}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInOnSignUpSuccess);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["/Users/newman/Development/Udemy/ReactMastery/crown/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","message","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","createUserWithEmailAndPassword","console","log","signInOnSignUpSuccess","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser,\n} from '../../firebase/firebase.utils';\nimport {\n  signInSuccess,\n  signInFailure,\n  signOutSuccess,\n  signOutFailure,\n  signUpSuccess,\n  signUpFailure,\n} from './user.actions';\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(\n      createUserProfileDocument,\n      userAuth,\n      additionalData,\n    );\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error.message));\n  }\n}\n\nexport function* signUp({ payload: { displayName, email, password } }) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield console.log(user);\n    //yield put(signUpSuccess({user, { displayName }}));\n  } catch (error) {\n    yield put(signUpFailure(error.message));\n  }\n}\n\nexport function signInOnSignUpSuccess(user, additionalData) {}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInOnSignUpSuccess);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onSignUpStart),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}