{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { ShopActionTypes } from './shop.types';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport function* fetchCollectionStartAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield fetchCollectionsFailure(error.message);\n  }\n}\nexport function* fetchCollectionStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionStartAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionStart)]);\n}","map":{"version":3,"sources":["/Users/newman/Development/Udemy/ReactMastery/crown/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","all","ShopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","firestore","convertCollectionsSnapshotToMap","fetchCollectionStartAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAIA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAO,UAAUC,yBAAV,GAAsC;AAC3C,MAAI;AACF,UAAMC,aAAa,GAAGH,SAAS,CAACI,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAC/BO,+BAD+B,EAE/BI,QAF+B,CAAjC;AAIA,UAAMV,GAAG,CAACG,uBAAuB,CAACS,cAAD,CAAxB,CAAT;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMT,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAA7B;AACD;AACF;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACtC,QAAMjB,UAAU,CACdI,eAAe,CAACc,uBADF,EAEdT,yBAFc,CAAhB;AAID;AAED,OAAO,UAAUU,SAAV,GAAsB;AAC3B,QAAMhB,GAAG,CAAC,CAACF,IAAI,CAACgB,oBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { ShopActionTypes } from './shop.types';\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure,\n} from './shop.actions';\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils';\n\nexport function* fetchCollectionStartAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(\n      convertCollectionsSnapshotToMap,\n      snapshot,\n    );\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield fetchCollectionsFailure(error.message);\n  }\n}\n\nexport function* fetchCollectionStart() {\n  yield takeLatest(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionStartAsync,\n  );\n}\n\nexport function* shopSagas() {\n  yield all([call(fetchCollectionStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}