{"ast":null,"code":"var _jsxFileName = \"/Users/newman/Development/Udemy/ReactMastery/crown/src/pages/shop/shop.component.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './shop.styles.scss';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  constructor(props) {\n    super(props);\n    this.unsubscripeFromSnapshop = null;\n    this.state = {\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionObj = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionObj);\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateCollections: collectionObj => dispatch(updateCollections(collectionObj))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/newman/Development/Udemy/ReactMastery/crown/src/pages/shop/shop.component.js"],"names":["React","Component","Route","connect","CollectionsOverview","CollectionPage","WithSpinner","firestore","convertCollectionsSnapshotToMap","updateCollections","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","constructor","props","unsubscripeFromSnapshop","state","isLoading","componentDidMount","collectionRef","collection","unsubscribeFromSnapshot","onSnapshot","snapshot","collectionObj","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,oBAAP;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAIA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,MAAMC,8BAA8B,GAAGJ,WAAW,CAACF,mBAAD,CAAlD;AACA,MAAMO,yBAAyB,GAAGL,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMO,QAAN,SAAuBX,SAAvB,CAAiC;AAC/BY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAOnBC,uBAPmB,GAOO,IAPP;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AAIDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAET,MAAAA;AAAF,QAAwB,KAAKK,KAAnC;AACA,UAAMK,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AACA,SAAKC,uBAAL,GAA+BF,aAAa,CAACG,UAAd,CAC7B,MAAOC,QAAP,IAAoB;AAClB,YAAMC,aAAa,GAAGhB,+BAA+B,CAACe,QAAD,CAArD;AACAd,MAAAA,iBAAiB,CAACe,aAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAER,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KAL4B,CAA/B;AAOD;;AAEDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKb,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEa,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAExB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEuB,KAAK,CAACC,IAAK,gBADtB;AAEE,MAAA,SAAS,EAAEvB,cAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AASD;;AAjC8B;;AAoCjC,MAAMwB,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLrB,IAAAA,iBAAiB,EAAGe,aAAD,IACjBM,QAAQ,CAACrB,iBAAiB,CAACe,aAAD,CAAlB;AAFL,GAAP;AAID,CALD;;AAOA,eAAerB,OAAO,CAAC,IAAD,EAAO0B,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport './shop.styles.scss';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n    };\n  }\n\n  unsubscripeFromSnapshop = null;\n\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(\n      async (snapshot) => {\n        const collectionObj = convertCollectionsSnapshotToMap(snapshot);\n        updateCollections(collectionObj);\n        this.setState({ isLoading: false });\n      },\n    );\n  }\n\n  render() {\n    const { match } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} component={CollectionsOverview} />\n        <Route\n          path={`${match.path}/:collectionId`}\n          component={CollectionPage}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateCollections: (collectionObj) =>\n      dispatch(updateCollections(collectionObj)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}