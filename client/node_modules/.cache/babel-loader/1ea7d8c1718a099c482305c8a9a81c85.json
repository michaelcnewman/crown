{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQty, cartItem) => accumulatedQty + cartItem.quantity, 0));\nexport const selectTotalCartAmount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedAmount, cartItem) => accumulatedAmount + cartItem.quantity * cartItem.price, 0));\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);","map":{"version":3,"sources":["/Users/newman/Development/Udemy/ReactMastery/crown/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartItemsCount","reduce","accumulatedQty","cartItem","quantity","selectTotalCartAmount","accumulatedAmount","price","selectCartHidden","hidden"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAApC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE1CE,IAAD,IAAUA,IAAI,CAACE,SAF4B,CAAtC;AAKP,OAAO,MAAMC,oBAAoB,GAAGN,cAAc,CAChD,CAACI,eAAD,CADgD,EAE/CC,SAAD,IACEA,SAAS,CAACE,MAAV,CACE,CAACC,cAAD,EAAiBC,QAAjB,KAA8BD,cAAc,GAAGC,QAAQ,CAACC,QAD1D,EAEE,CAFF,CAH8C,CAA3C;AASP,OAAO,MAAMC,qBAAqB,GAAGX,cAAc,CACjD,CAACI,eAAD,CADiD,EAEhDC,SAAD,IACEA,SAAS,CAACE,MAAV,CACE,CAACK,iBAAD,EAAoBH,QAApB,KACEG,iBAAiB,GAAGH,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACI,KAFrD,EAGE,CAHF,CAH+C,CAA5C;AAUP,OAAO,MAAMC,gBAAgB,GAAGd,cAAc,CAC5C,CAACC,UAAD,CAD4C,EAE3CE,IAAD,IAAUA,IAAI,CAACY,MAF6B,CAAvC","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectCart = (state) => state.cart;\n\nexport const selectCartItems = createSelector(\n  [selectCart],\n  (cart) => cart.cartItems,\n);\n\nexport const selectCartItemsCount = createSelector(\n  [selectCartItems],\n  (cartItems) =>\n    cartItems.reduce(\n      (accumulatedQty, cartItem) => accumulatedQty + cartItem.quantity,\n      0,\n    ),\n);\n\nexport const selectTotalCartAmount = createSelector(\n  [selectCartItems],\n  (cartItems) =>\n    cartItems.reduce(\n      (accumulatedAmount, cartItem) =>\n        accumulatedAmount + cartItem.quantity * cartItem.price,\n      0,\n    ),\n);\n\nexport const selectCartHidden = createSelector(\n  [selectCart],\n  (cart) => cart.hidden,\n);\n"]},"metadata":{},"sourceType":"module"}